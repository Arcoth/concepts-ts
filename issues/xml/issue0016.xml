<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="16" status="New">
<title>Concept and non-concept declarations of the same variable template</title>
<section><sref ref="[dcl.spec.concept]"/></section>
<submitter>Hubert Tong</submitter>
<date>09 Jul 2015</date>

<discussion>
<p>
It seems this is valid, and it is not clear if that is the intent.
<pre>
<code>
namespace A {
  template &lt;typename T&gt; extern const bool C;
};
template &lt;typename T&gt; concept bool A::C = true;
</code>
</pre>
</p>

<p>
Note: The C++14 restriction (removed in DR 1712) that the constexpr specifier be
present on every declaration of a variable template if any declaration has the
constexpr specifier applies to the "physical" presence of the specifier.
</p>

<p>
Note: The first declaration of A::C is not a "variable concept". There is no
restriction that a variable concept (i.e., "[a] variable template definition
having the concept specifier") is the only declaration of the entity that it
defines.
</p>

<p>
This seems to be a more general problem that being a "concept" is not a property
of the entity, but of its definition.
</p>

<p>
Andrew Sutton: This should not be a valid definition.
</p>
</discussion>

</issue>
